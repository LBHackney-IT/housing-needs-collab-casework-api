service: housing-collab-api

provider:
 name: aws
 runtime: nodejs12.x
 memorySize: 128
 timeout: 10
 vpc: ${self:custom.vpc.${opt:stage}}
 stage: ${opt:stage}
 region: eu-west-2

functions:
 api:
   handler: index.universal
   role: lambdaExecutionRole
   environment:
      CLICKSEND_API_KEY: ${ssm:/housing-collab-api/${self:provider.stage}/clicksend-api-key}
      CLICKSEND_USERNAME: ${ssm:/housing-collab-api/${self:provider.stage}/clicksend-username}
      DATABASE_URL: ${ssm:/housing-collab-api/${self:provider.stage}/database-url}
      EMAIL_ADDRESS_ID: ${ssm:/housing-collab-api/${self:provider.stage}/email-address-id}
      HEROKU_POSTGRESQL_CRIMSON_URL: ${ssm:/housing-collab-api/${self:provider.stage}/database-url}
      JWT_SECRET: ${ssm:/housing-collab-api/${self:provider.stage}/jwt-secret}
      SMS_NUMBER: ${ssm:/housing-collab-api/${self:provider.stage}/sms-number}
      UI_URL: ${ssm:/housing-collab-api/${self:provider.stage}/ui-url}

   events:
     - http:
        path: /
        method: ANY
     - http:
        path: /{proxy+}
        method: ANY

resources:
  Resources:
    lambdaExecutionRole:
      Type: AWS::IAM::Role
      Properties:
        Path: /${self:service}/${self:provider.stage}/
        RoleName: ${self:service}-lambdaExecutionRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        Policies:
          - PolicyName: manageLogs
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - 'Fn::Join':
                        - ':'
                        - - 'arn:aws:logs'
                          - Ref: 'AWS::Region'
                          - Ref: 'AWS::AccountId'
                          - 'log-group:/aws/lambda/*:*:*'
                - Effect: "Allow"
                  Action:
                    - "s3:PutObject"
                    - "s3:GetObject"
                  Resource:
                    Fn::Join:
                      - ""
                      - - "arn:aws:s3:::"
                        - "Ref": "ServerlessDeploymentBucket"
          - PolicyName: lambdaInvocation
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - "lambda:InvokeFunction"
                  Resource: "*"

custom:
  vpc:
    development:
      securityGroupIds:
        - sg-061dddb0a7fc34d1a
      subnetIds:
        - subnet-01f5294cc9f85669e
        - subnet-0d34c8d6fc16a0364
    production:
      securityGroupIds:
        - sg-0e3ca1352f142d8c8
      subnetIds:
        - subnet-01d3657f97a243261
        - subnet-0b7b8fea07efabf34
